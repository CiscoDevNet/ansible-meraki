# Test code for the Meraki Webhook module
# Copyright: (c) 2019, Kevin Breit (@kbreit)

# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Test Cases for meraki_webhook module
  block:
    - name: Test an API key is provided
      ansible.builtin.fail:
        msg: Please define an API key
      when: auth_key is not defined
      delegate_to: localhost

    - name: Create test network
      cisco.meraki.meraki_network:
        auth_key: '{{ auth_key }}'
        state: present
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        type: appliance
      delegate_to: localhost

    - name: Query for any webhooks expecting None
      cisco.meraki.meraki_webhook:
        auth_key: '{{ auth_key }}'
        state: query
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
      register: query_none
      delegate_to: localhost

    - name: Query for any webhooks expecting None - debug
      ansible.builtin.debug:
        var: query_none
      delegate_to: localhost

    - name: Query for any webhooks expecting None - assert
      ansible.builtin.assert:
        that:
          - query_none is not changed
          - query_none.data[0] is not defined
      delegate_to: localhost

    - name: Create webhook with check mode
      cisco.meraki.meraki_webhook:
        auth_key: '{{ auth_key }}'
        state: present
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        name: Test_Hook
        url: https://webhook.site/8eb5b76f-b167-4cb8-9fc4-42621b724244
        shared_secret: shhhdonttellanyone
      check_mode: true
      register: create_one_check
      delegate_to: localhost

    - name: Create webhook with check mode - debug
      ansible.builtin.debug:
        var: create_one_check
      delegate_to: localhost

    - name: Create webhook with check mode - assert
      ansible.builtin.assert:
        that:
          - create_one_check is changed
          - create_one_check.data is defined
      delegate_to: localhost

    - name: Create webhook
      cisco.meraki.meraki_webhook:
        auth_key: '{{ auth_key }}'
        state: present
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        name: Test_Hook
        url: https://webhook.site/8eb5b76f-b167-4cb8-9fc4-42621b724244
        shared_secret: shhhdonttellanyone
      register: create_one
      delegate_to: localhost

    - name: Create webhook - debug
      ansible.builtin.debug:
        var: create_one
      delegate_to: localhost

    - name: Create webhook - assert
      ansible.builtin.assert:
        that:
          - create_one is changed
          - create_one.data is defined
      delegate_to: localhost

    - name: Set webhook_id for future use
      ansible.builtin.set_fact:
        webhook_id: '{{ create_one.data.id }}'
      delegate_to: localhost

    - name: Query all webhooks expecting 1
      cisco.meraki.meraki_webhook:
        auth_key: '{{ auth_key }}'
        state: query
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
      register: query_one
      delegate_to: localhost

    - name: Query all webhooks expecting 1 - debug
      ansible.builtin.debug:
        var: query_one
      delegate_to: localhost

    - name: Query all webhooks expecting 1 - assert
      ansible.builtin.assert:
        that:
          - query_one.data is defined
          - query_one.data[0] is defined
          - query_one.data[1] is not defined
      delegate_to: localhost

    - name: Query one webhook
      cisco.meraki.meraki_webhook:
        auth_key: '{{ auth_key }}'
        state: query
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        name: Test_Hook
      register: query_one
      delegate_to: localhost

    - name: Query one webhook - debug
      ansible.builtin.debug:
        var: query_one
      delegate_to: localhost

    - name: Query one webhook - assert
      ansible.builtin.assert:
        that:
          - query_one.data is defined
      delegate_to: localhost

    - name: Query one webhook with id
      cisco.meraki.meraki_webhook:
        auth_key: '{{ auth_key }}'
        state: query
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        webhook_id: '{{ webhook_id }}'
      register: query_one_id
      delegate_to: localhost

    - name: Query one webhook with id - debug
      ansible.builtin.debug:
        var: query_one_id
      delegate_to: localhost

    - name: Query one webhook with id - assert
      ansible.builtin.assert:
        that:
          - query_one_id.data is defined
      delegate_to: localhost

    - name: Update webhook with check mode
      cisco.meraki.meraki_webhook:
        auth_key: '{{ auth_key }}'
        state: present
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        name: Test_Hook
        url: https://webhook.site/8eb5b76f-b167-4cb8-9fc4-42621b724244
        shared_secret: shhhdonttellanyonehere
      check_mode: true
      register: update_check
      delegate_to: localhost

    - name: Update webhook with check mode - assert
      ansible.builtin.assert:
        that:
          - update_check is changed
          - update_check.data is defined
      delegate_to: localhost

    - name: Update webhook
      cisco.meraki.meraki_webhook:
        auth_key: '{{ auth_key }}'
        state: present
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        name: Test_Hook
        url: https://webhook.site/8eb5b76f-b167-4cb8-9fc4-42621b724244
        shared_secret: shhhdonttellanyonehere
      register: update
      delegate_to: localhost

    - name: Update webhook - debug
      ansible.builtin.debug:
        var: update
      delegate_to: localhost

    - name: Update webhook - assert
      ansible.builtin.assert:
        that:
          - update is changed
          - update.data is defined
          - update.data.shared_secret is not defined
      delegate_to: localhost

    - name: Update webhook with idempotency with shared secret
      cisco.meraki.meraki_webhook:
        auth_key: '{{ auth_key }}'
        state: present
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        name: Test_Hook
        url: https://webhook.site/8eb5b76f-b167-4cb8-9fc4-42621b724244
        shared_secret: shhhdonttellanyonehere
      register: update_idempotent
      delegate_to: localhost

    - name: Update webhook with idempotency with shared secret - debug
      ansible.builtin.debug:
        var: update_idempotent
      delegate_to: localhost

    # response will always be "changed" since shared secret is not sent back in the response.
    - name: Update webhook with idempotency with shared secret - assert
      ansible.builtin.assert:
        that:
          - update_idempotent is changed
          - update_idempotent.data is defined
          - update_idempotent.data.shared_secret is not defined
      delegate_to: localhost

    - name: Update webhook with idempotency without shared secret
      cisco.meraki.meraki_webhook:
        auth_key: '{{ auth_key }}'
        state: present
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        name: Test_Hook
        url: https://webhook.site/8eb5b76f-b167-4cb8-9fc4-42621b724244
      register: update_idempotent2
      delegate_to: localhost

    - name: Update webhook with idempotency without shared secret - debug
      ansible.builtin.debug:
        var: update_idempotent2

    - name: Update webhook with idempotency without shared secret - assert
      ansible.builtin.assert:
        that:
          - update_idempotent2 is not changed
          - update_idempotent2.data is defined
          - update_idempotent2.data.shared_secret is not defined

    - name: Update webhook with id
      cisco.meraki.meraki_webhook:
        auth_key: '{{ auth_key }}'
        state: present
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        webhook_id: '{{ webhook_id }}'
        name: Test_Hook
        url: https://webhook.site/8eb5b76f-b167-4cb8-9fc4-42621b724244
        shared_secret: shhhdonttellanyonehereid
      register: update_id
      delegate_to: localhost

    - name: Update webhook with id - debug
      ansible.builtin.debug:
        var: update_id

    # response will always be "changed" since shared secret is not sent back in the response.
    - name: Update webhook with id - assert
      ansible.builtin.assert:
        that:
          - update_id is changed
          - update_id.data is defined

    - name: Create webhook payload template for a webhook
      cisco.meraki.meraki_webhook_payload_template:
        auth_key: '{{ auth_key }}'
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        state: present
        name: TestPayloadTemplate
        body: "a fake body"
      register: payload_template
      delegate_to: localhost

    - name: Debug payload_template
      ansible.builtin.debug:
        var: payload_template

    - name: Create webhook with a payload template
      cisco.meraki.meraki_webhook:
        auth_key: '{{ auth_key }}'
        state: present
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        payload_template_name: TestPayloadTemplate
        name: Test_Hook_with_template
        url: https://webhook.site/8eb5b76f-b167
        shared_secret: shhhdonttellanyone
      register: webhook_with_template
      delegate_to: localhost

    - name: Create webhook with a payload template - debug
      ansible.builtin.debug:
        var: webhook_with_template

    - name: Create webhook with a payload template - assert
      ansible.builtin.assert:
        that:
          - webhook_with_template is changed
          - webhook_with_template.data is defined
          - webhook_with_template.data.payload_template.name == "TestPayloadTemplate"

    - name: Delete webhook with payload template
      cisco.meraki.meraki_webhook:
        auth_key: '{{ auth_key }}'
        state: absent
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        name: Test_Hook_with_template
      register: delete_hook_with_template
      delegate_to: localhost

    - name: Delete webhook with payload template - debug
      ansible.builtin.debug:
        var: delete_hook_with_template

    - name: Delete webhook with payload template - assert
      ansible.builtin.assert:
        that:
          - delete_hook_with_template is changed

    - name: Create test webhook
      cisco.meraki.meraki_webhook:
        auth_key: '{{ auth_key }}'
        state: present
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        name: Test_Hook
        test: test
        url: https://webhook.site/8eb5b76f-b167-4cb8-9fc4-42621b724244
      register: webhook_test
      delegate_to: localhost

    - name: Set test_id for future use
      ansible.builtin.set_fact:
        test_id: '{{ webhook_test.data.id }}'

    - name: Create test webhook - debug
      ansible.builtin.debug:
        var: test_id

    - name: Get webhook status
      cisco.meraki.meraki_webhook:
        auth_key: '{{ auth_key }}'
        state: query
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        test_id: '{{ test_id }}'
      register: webhook_test_status
      delegate_to: localhost

    - name: Get webhook status - debug
      ansible.builtin.debug:
        var: webhook_test_status

    - name: Get webhook status - assert
      ansible.builtin.assert:
        that:
          - webhook_test_status.data is defined

    - name: Query all webhooks
      cisco.meraki.meraki_webhook:
        auth_key: '{{ auth_key }}'
        state: query
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
      register: query_all
      delegate_to: localhost

    - name: Query all webhooks - debug
      ansible.builtin.debug:
        var: query_all

    - name: Delete webhook invalid webhook
      cisco.meraki.meraki_webhook:
        auth_key: '{{ auth_key }}'
        state: absent
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        name: Test_Hook_Invalid
      check_mode: true
      register: delete_invalid
      ignore_errors: true
      delegate_to: localhost

    - name: Delete webhook invalid webhook - debug
      ansible.builtin.debug:
        var: delete_invalid

    - name: Delete webhook invalid webhook - assert
      ansible.builtin.assert:
        that:
          - 'delete_invalid.msg == "There is no webhook with the name Test_Hook_Invalid"'

    - name: Delete webhook in check mode
      cisco.meraki.meraki_webhook:
        auth_key: '{{ auth_key }}'
        state: absent
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        name: Test_Hook
      check_mode: true
      register: delete_check
      delegate_to: localhost

    - name: Delete webhook in check mode - debug
      ansible.builtin.debug:
        var: delete_check

    - name: Delete webhook in check mode - assert
      ansible.builtin.assert:
        that:
          - delete_check is changed

    - name: Delete webhook
      cisco.meraki.meraki_webhook:
        auth_key: '{{ auth_key }}'
        state: absent
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        name: Test_Hook
      register: delete
      delegate_to: localhost

    - name: Delete webhook - debug
      ansible.builtin.debug:
        var: delete

    - name: Delete webhook - assert
      ansible.builtin.assert:
        that:
          - delete is changed

  #############################################################################
  # Tear down starts here
  #############################################################################
  always:
    - name: Delete webhook payload template for a webhook
      cisco.meraki.meraki_webhook_payload_template:
        auth_key: '{{ auth_key }}'
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        state: absent
        name: TestPayloadTemplate
      delegate_to: localhost

    - name: Delete test network
      cisco.meraki.meraki_network:
        auth_key: '{{ auth_key }}'
        state: absent
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
      delegate_to: localhost
