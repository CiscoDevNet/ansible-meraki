# Test code for the Meraki modules
# Copyright: (c) 2018, Kevin Breit (@kbreit)

# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Block of tests
  block:
    - name: Create network with type switch
      cisco.meraki.meraki_network:
        auth_key: "{{ auth_key }}"
        state: present
        org_name: "{{ test_org_name }}"
        net_name: IntTestNetworkSwitch
        type: switch
        timezone: America/Chicago
      delegate_to: localhost
      register: create_net_switch

    - name: Claim a device into a network
      cisco.meraki.meraki_device:
        auth_key: "{{ auth_key }}"
        org_name: "{{ test_org_name }}"
        net_name: IntTestNetworkSwitch
        serial: "{{ serial_switch_l3 }}"
        state: present
      delegate_to: localhost

    - name: Query OSPF settings
      cisco.meraki.meraki_ms_ospf:
        auth_key: "{{ auth_key }}"
        org_name: "{{ test_org_name }}"
        net_name: IntTestNetworkSwitch
        state: query
      delegate_to: localhost
      register: query_all

    - name: Assert query_all
      ansible.builtin.assert:
        that:
          - query_all.data is defined

    - name: Enable OSPF with check mode
      cisco.meraki.meraki_ms_ospf:
        auth_key: "{{ auth_key }}"
        org_name: "{{ test_org_name }}"
        net_name: IntTestNetworkSwitch
        state: present
        enabled: true
        hello_timer: 20
        dead_timer: 60
        areas:
          - area_id: 0
            area_name: Backbone
            area_type: normal
          - area_id: 1
            area_name: Office
            area_type: nssa
        md5_authentication_enabled: true
        md5_authentication_key:
          id: 1
          passphrase: "secretpass"
      check_mode: true
      register: enable_check_mode

    - name: Assert enable_check_mode
      ansible.builtin.assert:
        that:
          - enable_check_mode.data is defined

    - name: Enable OSPF
      cisco.meraki.meraki_ms_ospf:
        auth_key: "{{ auth_key }}"
        org_name: "{{ test_org_name }}"
        net_name: IntTestNetworkSwitch
        state: present
        enabled: true
        hello_timer: 20
        dead_timer: 60
        areas:
          - area_id: 0
            area_name: Backbone
            area_type: normal
          - area_id: 1
            area_name: Office
            area_type: nssa
        md5_authentication_enabled: true
        md5_authentication_key:
          id: 1
          passphrase: "secretpass"
      register: enable

    - name: Assert enable
      ansible.builtin.assert:
        that:
          - enable.data is defined

    - name: Enable OSPF with idempotency
      cisco.meraki.meraki_ms_ospf:
        auth_key: "{{ auth_key }}"
        org_name: "{{ test_org_name }}"
        net_name: IntTestNetworkSwitch
        state: present
        enabled: true
        hello_timer: 20
        dead_timer: 60
        areas:
          - area_id: 0
            area_name: Backbone
            area_type: normal
          - area_id: 1
            area_name: Office
            area_type: nssa
        md5_authentication_enabled: true
        md5_authentication_key:
          id: 1
          passphrase: "secretpass"
      delegate_to: localhost
      register: enable_ospf_idempotent

    - name: Debug enable_ospf_idempotent
      ansible.builtin.debug:
        var: enable_ospf_idempotent

    - name: Assert enable_ospf_idempotent
      ansible.builtin.assert:
        that:
          - enable_ospf_idempotent is not changed
          - enable_ospf_idempotent.data is defined

  #############################################################################
  # Tear down starts here
  #############################################################################

  always:
    - name: Delete network
      cisco.meraki.meraki_network:
        auth_key: "{{ auth_key }}"
        state: absent
        org_name: "{{ test_org_name }}"
        net_name: IntTestNetworkSwitch
      delegate_to: localhost
