# Test code for the Meraki Switch Stack module
# Copyright: (c) 2020, Kevin Breit (@kbreit)

# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Block of tests
  block:
  - name: Create network with type switch
    cisco.meraki.meraki_network:
      auth_key: '{{ auth_key }}'
      state: present
      org_name: '{{ test_org_name }}'
      net_name: '{{ test_switch_net_name }}'
      type: switch
      timezone: America/Chicago
    delegate_to: localhost
    register: create_net_switch

  - name: Set fact create_net_switch
    ansible.builtin.set_fact:
      net_id: '{{ create_net_switch.data.id }}'

  - name: Claim devices into network
    cisco.meraki.meraki_device:
      auth_key: '{{ auth_key }}'
      org_name: '{{ test_org_name }}'
      net_id: '{{ net_id }}'
      serial: '{{ item }}'
      state: present
    delegate_to: localhost
    register: claim_device
    loop:
      - "QBSB-BPR6-PRER"
      - "QBSB-VLNE-E299"
      - "QBSB-D75G-PXCG"

  - name: Create new stack
    cisco.meraki.meraki_ms_stack:
      auth_key: '{{ auth_key }}'
      state: present
      org_name: '{{ test_org_name }}'
      net_name: '{{ test_switch_net_name }}'
      name: Test stack
      serials:
        - "QBSB-BPR6-PRER"
        - "QBSB-VLNE-E299"
    register: create

  - name: Debug create
    ansible.builtin.debug:
      var: create

  - name: Set fact create
    ansible.builtin.set_fact:
      stack_id: '{{ create.data.id }}'

  - name: Assert create
    ansible.builtin.assert:
      that:
        - create.data is defined
        - create is changed

  - name: Add switch to stack
    cisco.meraki.meraki_ms_stack:
      auth_key: '{{ auth_key }}'
      state: present
      org_name: '{{ test_org_name }}'
      net_name: '{{ test_switch_net_name }}'
      stack_id: '{{ stack_id }}'
      serials:
        - "QBSB-D75G-PXCG"
    register: add_stack

  - name: Assert add_stack
    ansible.builtin.assert:
      that:
        - add_stack.data is defined
        - add_stack.data.serials | length == 3
        - add_stack is changed

  - name: Add switch to stack idempotent
    cisco.meraki.meraki_ms_stack:
      auth_key: '{{ auth_key }}'
      state: present
      org_name: '{{ test_org_name }}'
      net_name: '{{ test_switch_net_name }}'
      stack_id: '{{ stack_id }}'
      serials:
        - "QBSB-D75G-PXCG"
    register: add_stack_idempotent

  - name: Assert add_stack_idempotent
    ansible.builtin.assert:
      that:
        - add_stack_idempotent.data is defined
        - add_stack_idempotent.data.serials | length == 3
        - add_stack_idempotent is not changed

  - name: Remove switch from stack
    cisco.meraki.meraki_ms_stack:
      auth_key: '{{ auth_key }}'
      state: absent
      org_name: '{{ test_org_name }}'
      net_name: '{{ test_switch_net_name }}'
      stack_id: '{{ stack_id }}'
      serials:
        - "QBSB-D75G-PXCG"
    register: remove_from_stack

  - name: Debug remove_from_stack
    ansible.builtin.debug:
      var: remove_from_stack

  - name: Assert remove_from_stack
    ansible.builtin.assert:
      that:
        - remove_from_stack.data is defined
        - remove_from_stack.data.serials | length == 2
        - remove_from_stack is changed

  - name: Remove switch from stack idempotent
    cisco.meraki.meraki_ms_stack:
      auth_key: '{{ auth_key }}'
      state: absent
      org_name: '{{ test_org_name }}'
      net_name: '{{ test_switch_net_name }}'
      stack_id: '{{ stack_id }}'
      serials:
        - "QBSB-D75G-PXCG"
    register: remove_from_stack_idempotent

  - name: Debug remove_from_stack_idempotent
    ansible.builtin.debug:
      var: remove_from_stack_idempotent

  - name: Assert remove_from_stack_idempotent
    ansible.builtin.assert:
      that:
        - remove_from_stack_idempotent.data is defined
        - remove_from_stack_idempotent.data.serials | length == 2
        - remove_from_stack_idempotent is not changed

  - name: Query all stacks in the network
    cisco.meraki.meraki_ms_stack:
      auth_key: '{{ auth_key }}'
      state: query
      org_name: '{{ test_org_name }}'
      net_name: '{{ test_switch_net_name }}'
    register: query_all

  - name: Debug query_all
    ansible.builtin.debug:
      var: query_all

  - name: Assert query_all
    ansible.builtin.assert:
      that:
        - query_all.data is defined
        - query_all is not changed

  - name: Query one stack
    cisco.meraki.meraki_ms_stack:
      auth_key: '{{ auth_key }}'
      state: query
      org_name: '{{ test_org_name }}'
      net_name: '{{ test_switch_net_name }}'
      stack_id: '{{ stack_id }}'
    register: query_one

  - name: Debug query_one
    ansible.builtin.debug:
      var: query_one

  - name: Assert query_one
    ansible.builtin.assert:
      that:
        - query_one.data is defined
        - query_one is not changed

  - name: Query one stack using name
    cisco.meraki.meraki_ms_stack:
      auth_key: '{{ auth_key }}'
      state: query
      org_name: '{{ test_org_name }}'
      net_name: '{{ test_switch_net_name }}'
      name: Test stack
    register: query_one_name

  - name: Debug query_one_name
    ansible.builtin.debug:
      var: query_one_name

  - name: Assert query_one_name
    ansible.builtin.assert:
      that:
        - query_one_name.data is defined
        - query_one_name is not changed

  always:
    - name: Delete stack
      cisco.meraki.meraki_ms_stack:
        auth_key: '{{ auth_key }}'
        state: absent
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_switch_net_name }}'
        stack_id: '{{ stack_id }}'
      register: delete

    - name: Delete network
      cisco.meraki.meraki_network:
        auth_key: '{{ auth_key }}'
        state: absent
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_switch_net_name }}'
      delegate_to: localhost
