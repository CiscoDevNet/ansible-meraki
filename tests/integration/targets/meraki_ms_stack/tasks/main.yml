# Test code for the Meraki Switch Stack module
# Copyright: (c) 2020, Kevin Breit (@kbreit)

# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- block:
  - name: Create network with type switch
    meraki_network:
      auth_key: '{{ auth_key }}'
      state: present
      org_name: '{{test_org_name}}'
      net_name: '{{test_switch_net_name}}'
      type: switch
      timezone: America/Chicago
    delegate_to: localhost
    register: create_net_switch

  - set_fact:
      net_id: '{{create_net_switch.data.id}}'

  - name: Claim devices into network
    meraki_device:
      auth_key: '{{auth_key}}'
      org_name: '{{test_org_name}}'
      net_id: '{{net_id}}'
      serial: '{{item}}'
      state: present
    delegate_to: localhost
    register: claim_device
    loop:
      - "QBSB-BPR6-PRER"
      - "QBSB-VLNE-E299"
      - "QBSB-D75G-PXCG"

  - name: Create new stack
    meraki_switch_stack:
      auth_key: '{{ auth_key }}'
      state: present
      org_name: '{{test_org_name}}'
      net_name: '{{test_switch_net_name}}'
      name: Test stack
      serials:
        - "QBSB-BPR6-PRER"
        - "QBSB-VLNE-E299"
    register: create

  - debug:
      var: create

  - set_fact:
      stack_id: '{{create.data.id}}'

  - assert:
      that:
        - create.data is defined
        - create is changed

  - name: Add switch to stack
    meraki_switch_stack:
      auth_key: '{{ auth_key }}'
      state: present
      org_name: '{{test_org_name}}'
      net_name: '{{test_switch_net_name}}'
      stack_id: '{{stack_id}}'
      serials:
        - "QBSB-D75G-PXCG"
    register: add_stack

  - assert:
      that:
        - add_stack.data is defined
        - add_stack.data.serials | length == 3
        - add_stack is changed

  - name: Add switch to stack idempotent
    meraki_switch_stack:
      auth_key: '{{ auth_key }}'
      state: present
      org_name: '{{test_org_name}}'
      net_name: '{{test_switch_net_name}}'
      stack_id: '{{stack_id}}'
      serials:
        - "QBSB-D75G-PXCG"
    register: add_stack_idempotent

  - assert:
      that:
        - add_stack_idempotent.data is defined
        - add_stack_idempotent.data.serials | length == 3
        - add_stack_idempotent is not changed

  - name: Remove switch from stack
    meraki_switch_stack:
      auth_key: '{{ auth_key }}'
      state: absent
      org_name: '{{test_org_name}}'
      net_name: '{{test_switch_net_name}}'
      stack_id: '{{stack_id}}'
      serials:
        - "QBSB-D75G-PXCG"
    register: remove_from_stack

  - debug:
      var: remove_from_stack

  - assert:
      that:
        - remove_from_stack.data is defined
        - remove_from_stack.data.serials | length == 2
        - remove_from_stack is changed

  - name: Remove switch from stack idempotent
    meraki_switch_stack:
      auth_key: '{{ auth_key }}'
      state: absent
      org_name: '{{test_org_name}}'
      net_name: '{{test_switch_net_name}}'
      stack_id: '{{stack_id}}'
      serials:
        - "QBSB-D75G-PXCG"
    register: remove_from_stack_idempotent

  - debug:
      var: remove_from_stack_idempotent

  - assert:
      that:
        - remove_from_stack_idempotent.data is defined
        - remove_from_stack_idempotent.data.serials | length == 2
        - remove_from_stack_idempotent is not changed

  - name: Query all stacks in the network
    meraki_switch_stack:
      auth_key: '{{ auth_key }}'
      state: query
      org_name: '{{test_org_name}}'
      net_name: '{{test_switch_net_name}}'
    register: query_all

  - debug:
      var: query_all

  - assert:
      that:
        - query_all.data is defined
        - query_all is not changed

  - name: Query one stack
    meraki_switch_stack:
      auth_key: '{{ auth_key }}'
      state: query
      org_name: '{{test_org_name}}'
      net_name: '{{test_switch_net_name}}'
      stack_id: '{{stack_id}}'
    register: query_one

  - debug:
      var: query_one

  - assert:
      that:
        - query_one.data is defined
        - query_one is not changed

  - name: Query one stack using name
    meraki_switch_stack:
      auth_key: '{{ auth_key }}'
      state: query
      org_name: '{{test_org_name}}'
      net_name: '{{test_switch_net_name}}'
      name: Test stack
    register: query_one_name

  - debug:
      var: query_one_name

  - assert:
      that:
        - query_one_name.data is defined
        - query_one_name is not changed

  always:
  - name: Delete stack
    meraki_switch_stack:
      auth_key: '{{ auth_key }}'
      state: absent
      org_name: '{{test_org_name}}'
      net_name: '{{test_switch_net_name}}'
      stack_id: '{{stack_id}}'
    register: delete

  - name: Delete network
    meraki_network:
      auth_key: '{{ auth_key }}'
      state: absent
      org_name: '{{test_org_name}}'
      net_name: '{{test_switch_net_name}}'
    delegate_to: localhost
