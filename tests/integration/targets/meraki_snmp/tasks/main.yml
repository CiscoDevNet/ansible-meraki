# Test code for the Meraki Organization module
# Copyright: (c) 2018, Kevin Breit (@kbreit)

# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Execute teests against meraki_snmp
  block:
    - name: Test an API key is provided
      ansible.builtin.fail:
        msg: Please define an API key
      when: auth_key is not defined

    - name: Create SNMP network
      cisco.meraki.meraki_network:
        auth_key: '{{ auth_key }}'
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        state: present
        type: appliance
      delegate_to: localhost
      register: new_net

    - name: Set net_id
      ansible.builtin.set_fact:
        net_id: new_net.data.id

    - name: Query all SNMP settings
      cisco.meraki.meraki_snmp:
        auth_key: '{{ auth_key }}'
        org_name: '{{ test_org_name }}'
        state: query
      delegate_to: localhost
      register: snmp_query

    - name: Enable SNMPv2c
      cisco.meraki.meraki_snmp:
        auth_key: '{{ auth_key }}'
        org_name: '{{ test_org_name }}'
        state: present
        v2c_enabled: true
      delegate_to: localhost
      register: snmp_v2_enable

    - name: Assert v2c is enabled
      ansible.builtin.assert:
        that:
          - snmp_v2_enable.data.v2_community_string is defined
          - snmp_v2_enable.data.v2c_enabled == true

    - name: Disable SNMPv2c
      cisco.meraki.meraki_snmp:
        auth_key: '{{ auth_key }}'
        org_name: '{{ test_org_name }}'
        state: present
        v2c_enabled: false
      delegate_to: localhost
      register: snmp_v2_disable

    - name: Assert v2c is disabled
      ansible.builtin.assert:
        that:
          - snmp_v2_disable.data.v2_community_string is not defined
          - snmp_v2_disable.data.v2c_enabled == False

    - name: Enable SNMPv2c with org_id
      cisco.meraki.meraki_snmp:
        auth_key: '{{ auth_key }}'
        org_id: '{{ test_org_id }}'
        state: present
        v2c_enabled: true
      delegate_to: localhost
      register: snmp_v2_enable_id

    - name: Assert v2c is enabled with org_id
      ansible.builtin.assert:
        that:
          - snmp_v2_enable_id.data.v2_community_string is defined
          - snmp_v2_enable_id.data.v2c_enabled == true

    - name: Disable SNMPv2c with org_id
      cisco.meraki.meraki_snmp:
        auth_key: '{{ auth_key }}'
        org_id: '{{ test_org_id }}'
        state: present
        v2c_enabled: false
      delegate_to: localhost
      register: snmp_v2_disable_id

    - name: Assert v2c is disabled with org_id
      ansible.builtin.assert:
        that:
          - snmp_v2_disable_id.data.v2_community_string is not defined
          - snmp_v2_disable_id.data.v2c_enabled == False

    - name: Enable SNMPv3 with check mode
      cisco.meraki.meraki_snmp:
        auth_key: '{{ auth_key }}'
        org_name: '{{ test_org_name }}'
        state: present
        v3_enabled: true
        v3_auth_mode: SHA
        v3_auth_pass: ansiblepass
        v3_priv_mode: AES128
        v3_priv_pass: ansiblepass
      delegate_to: localhost
      check_mode: true
      register: snmp_v3_enable_check

    - name: Assert check mode
      ansible.builtin.assert:
        that:
          - snmp_v3_enable_check.data.v3_enabled == True
          - snmp_v3_enable_check.changed == True

    - name: Enable SNMPv3
      cisco.meraki.meraki_snmp:
        auth_key: '{{ auth_key }}'
        org_name: '{{ test_org_name }}'
        state: present
        v3_enabled: true
        v3_auth_mode: SHA
        v3_auth_pass: ansiblepass
        v3_priv_mode: AES128
        v3_priv_pass: ansiblepass
      delegate_to: localhost
      register: snmp_v3_enable

    - name: Assert v3 enabled
      ansible.builtin.assert:
        that:
          - snmp_v3_enable.data.v3_enabled == True
          - snmp_v3_enable.changed == True

    - name: Check for idempotency
      cisco.meraki.meraki_snmp:
        auth_key: '{{ auth_key }}'
        org_name: '{{ test_org_name }}'
        state: present
        v3_enabled: true
        v3_auth_mode: SHA
        v3_auth_pass: ansiblepass
        v3_priv_mode: AES128
        v3_priv_pass: ansiblepass
      delegate_to: localhost
      register: snmp_idempotent

    - name: Assert idempotency
      ansible.builtin.assert:
        that:
          - snmp_idempotent.changed == False
          - snmp_idempotent.data is defined

    - name: Add peer IPs
      cisco.meraki.meraki_snmp:
        auth_key: '{{ auth_key }}'
        org_name: '{{ test_org_name }}'
        state: present
        v3_enabled: true
        v3_auth_mode: SHA
        v3_auth_pass: ansiblepass
        v3_priv_mode: AES128
        v3_priv_pass: ansiblepass
        peer_ips:
          - 1.1.1.1
          - 2.2.2.2
      delegate_to: localhost
      register: peers

    - name: Assert peer_ips is defined
      ansible.builtin.assert:
        that:
          - peers.data.peer_ips is defined

    - name: Set short password
      cisco.meraki.meraki_snmp:
        auth_key: '{{ auth_key }}'
        org_name: '{{ test_org_name }}'
        state: present
        v3_enabled: true
        v3_auth_mode: SHA
        v3_auth_pass: ansible
        v3_priv_mode: AES128
        v3_priv_pass: ansible
      delegate_to: localhost
      register: short_password
      ignore_errors: true

    - name: Assert password length
      ansible.builtin.assert:
        that:
          - '"at least 8" in short_password.msg'

    - name: Set network access type to community string
      cisco.meraki.meraki_snmp:
        auth_key: '{{ auth_key }}'
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        state: present
        access: community
        community_string: abc123
      delegate_to: localhost
      register: set_net_community

    - name: Assert community string
      ansible.builtin.assert:
        that:
          - set_net_community is changed
          - set_net_community.data is defined

    - name: Set network access type to username
      cisco.meraki.meraki_snmp:
        auth_key: '{{ auth_key }}'
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        state: present
        access: users
        users:
          - username: ansibleuser
            passphrase: ansiblepass
      delegate_to: localhost
      register: set_net_user

    - name: Assert access type
      ansible.builtin.assert:
        that:
          - set_net_user is changed
          - set_net_user.data is defined

    - name: Set network access type to none
      cisco.meraki.meraki_snmp:
        auth_key: '{{ auth_key }}'
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        state: present
        access: none
      delegate_to: localhost
      register: set_net_none

    - name: Assert access type of none
      ansible.builtin.assert:
        that:
          - set_net_none is changed
          - set_net_none.data is defined

    - name: Query network SNMP settings
      cisco.meraki.meraki_snmp:
        auth_key: '{{ auth_key }}'
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        state: query
      delegate_to: localhost
      register: get_net

    - name: Assert query
      ansible.builtin.assert:
        that:
          - get_net.data is defined

  always:
    - name: Disable SNMPv3
      cisco.meraki.meraki_snmp:
        auth_key: '{{ auth_key }}'
        org_name: '{{ test_org_name }}'
        state: present
        v3_enabled: false
        v3_auth_mode: SHA
        v3_auth_pass: ansiblepass
        v3_priv_mode: AES128
        v3_priv_pass: ansiblepass
      delegate_to: localhost

    - name: Delete SNMP network
      cisco.meraki.meraki_network:
        auth_key: '{{ auth_key }}'
        org_name: '{{ test_org_name }}'
        net_name: '{{ test_net_name }}'
        state: absent
      delegate_to: localhost
