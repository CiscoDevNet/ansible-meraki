# Test code for the Meraki modules
# Copyright: (c) 2018, Kevin Breit (@kbreit)

# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Block of tasks
  block:
  - name: Create wireless network
    cisco.meraki.meraki_network:
      auth_key: '{{ auth_key }}'
      state: present
      org_name: '{{ test_org_name }}'
      net_name: TestNetWireless
      type: wireless
    delegate_to: localhost
    register: new_net

  - name: Set fact new_net
    ansible.builtin.set_fact:
      net: '{{ new_net.data.id }}'

  - name: Check rule values are lowercase
    cisco.meraki.meraki_mr_l3_firewall:
      auth_key: '{{ auth_key }}'
      org_name: '{{ test_org_name }}'
      net_name: TestNetWireless
      state: query
      number: 0
    delegate_to: localhost
    register: query

  - name: Debug query
    ansible.builtin.debug:
      var: query

  - name: Assert query
    ansible.builtin.assert:
      that:
        - query.data.rules.0.policy == 'deny'
        - query.data.rules.0.protocol == 'any'
        - query.data.rules.0.dest_port == 'any'
        - query.data.rules.0.dest_cidr == 'local lan'
        - query.data.rules.0.comment == 'Wireless clients accessing LAN'
        - query.data.rules.1.policy == 'allow'
        - query.data.rules.1.protocol == 'any'
        - query.data.rules.1.dest_port == 'any'
        - query.data.rules.1.dest_cidr == 'any'
        - query.data.rules.1.comment == 'Default rule'

  - name: Create single firewall rule with check mode
    cisco.meraki.meraki_mr_l3_firewall:
      auth_key: '{{ auth_key }}'
      state: present
      org_name: '{{ test_org_name }}'
      net_id: '{{ net }}'
      number: 1
      rules:
        - comment: Integration test rule
          policy: allow
          protocol: tcp
          dest_port: 80
          dest_cidr: 192.0.2.0/24
      allow_lan_access: false
    delegate_to: localhost
    check_mode: true
    register: create_one_check

  - name: Debug create_one_check
    ansible.builtin.debug:
      msg: '{{ create_one_check }}'

  - name: Assert create_one_check
    ansible.builtin.assert:
      that:
        - create_one_check.data.0.comment == 'Integration test rule'
        - create_one_check.data.1.policy == 'deny'
        - create_one_check.data is defined
        - create_one_check is changed

  - name: Create single firewall rule
    cisco.meraki.meraki_mr_l3_firewall:
      auth_key: '{{ auth_key }}'
      state: present
      org_name: '{{ test_org_name }}'
      net_id: '{{ net }}'
      number: 1
      rules:
        - comment: Integration test rule
          policy: allow
          protocol: tcp
          dest_port: 80
          dest_cidr: 192.0.2.0/24
      allow_lan_access: false
    delegate_to: localhost
    register: create_one

  - name: Debug create_one
    ansible.builtin.debug:
      msg: '{{ create_one }}'

  - name: Assert create_one
    ansible.builtin.assert:
      that:
        - create_one.data.rules.0.comment == 'Integration test rule'
        - create_one.data.rules.1.policy == 'deny'
        - create_one.data is defined

  - name: Enable local LAN access with check mode
    cisco.meraki.meraki_mr_l3_firewall:
      auth_key: '{{ auth_key }}'
      state: present
      org_name: '{{ test_org_name }}'
      net_id: '{{ net }}'
      number: 1
      allow_lan_access: true
    delegate_to: localhost
    check_mode: true
    register: enable_lan_check

  - name: Debug enable_lan_check
    ansible.builtin.debug:
      var: enable_lan_check

  - name: Assert enable_lan_check
    ansible.builtin.assert:
      that:
        - enable_lan_check.data.rules.1.policy == 'allow'
        - enable_lan_check is changed

  - name: Enable local LAN access
    cisco.meraki.meraki_mr_l3_firewall:
      auth_key: '{{ auth_key }}'
      state: present
      org_name: '{{ test_org_name }}'
      net_id: '{{ net }}'
      number: 1
      allow_lan_access: true
    delegate_to: localhost
    register: enable_lan

  - name: Assert enable_lan
    ansible.builtin.assert:
      that:
        - enable_lan.data.rules.1.policy == 'allow'

  - name: Update rules without specifying LAN access with check mode
    cisco.meraki.meraki_mr_l3_firewall:
      auth_key: '{{ auth_key }}'
      state: present
      org_name: '{{ test_org_name }}'
      net_id: '{{ net }}'
      number: 1
      rules:
        - comment: Integration test rule
          policy: allow
          protocol: tcp
          dest_port: 8080
          dest_cidr: 192.0.2.0/24
    delegate_to: localhost
    register: update_one_check

  - name: Debug update_one_check
    ansible.builtin.debug:
      msg: '{{ update_one_check }}'

  - name: Assert update_one_check
    ansible.builtin.assert:
      that:
        - update_one_check.data.rules.0.comment == 'Integration test rule'
        - update_one_check.data is defined

  - name: Query firewall rules
    cisco.meraki.meraki_mr_l3_firewall:
      auth_key: '{{ auth_key }}'
      state: query
      org_name: '{{ test_org_name }}'
      net_id: '{{ net }}'
      number: 1
    delegate_to: localhost
    register: query

  - name: Debug query
    ansible.builtin.debug:
      msg: '{{ query }}'

  - name: Assert query
    ansible.builtin.assert:
      that:
        - query.data.rules.1.comment == 'Wireless clients accessing LAN'
        - query.data.rules.2.comment == 'Default rule'
        - query.changed == False

############################################################################
# Tear down starts here
############################################################################
  always:
    - name: Delete wireless SSID
      cisco.meraki.meraki_ssid:
        auth_key: '{{ auth_key }}'
        state: absent
        org_name: '{{ test_org_name }}'
        net_id: '{{ net }}'
        number: 1
      delegate_to: localhost

    - name: Delete wireless network
      cisco.meraki.meraki_network:
        auth_key: '{{ auth_key }}'
        state: absent
        org_name: '{{ test_org_name }}'
        net_id: '{{ net }}'
      delegate_to: localhost
