# Test code for the Meraki modules
# Copyright: (c) 2018, Kevin Breit (@kbreit)

# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Block of tests
  block:
    - name: Create network with type switch
      cisco.meraki.meraki_network:
        auth_key: "{{ auth_key }}"
        state: present
        org_name: "{{ test_org_name }}"
        net_id: "{{ test_net_id }}"
        type: switch
        timezone: America/Chicago
      delegate_to: localhost
      register: create_net_switch

    - name: Set fact create_net_switch
      ansible.builtin.set_fact:
        net_id: "{{ create_net_switch.data.id }}"

    - name: Create new stack
      cisco.meraki.meraki_ms_stack:
        auth_key: "{{ auth_key }}"
        state: present
        org_name: "{{ test_org_name }}"
        net_id: "{{ test_net_id }}"
        name: Test stack
        serials:
          - "QBSB-BPR6-PRER"
          - "QBSB-VLNE-E299"
          - "QBSB-D75G-PXCG"
      register: stack

    - name: Set fact stack
      ansible.builtin.set_fact:
        stack_id: "{{ stack.data.id }}"

    - name: Create l3 interface with check mode
      cisco.meraki.meraki_ms_stack_l3_interface:
        auth_key: "{{ auth_key }}"
        state: present
        org_name: "{{ test_org_name }}"
        net_id: "{{ test_net_id }}"
        stack_id: "{{ stack_id }}"
        default_gateway: "192.168.3.1"
        name: "Test L3 interface 2"
        subnet: "192.168.3.0/24"
        interface_ip: "192.168.3.2"
        multicast_routing: disabled
        vlan_id: 11
      delegate_to: localhost
      register: create_check
      check_mode: true

    - name: Assert create_check
      ansible.builtin.assert:
        that:
          - create_check.data is defined
          - create_check is changed

    - name: Create l3 interface
      cisco.meraki.meraki_ms_stack_l3_interface:
        auth_key: "{{ auth_key }}"
        state: present
        org_name: "{{ test_org_name }}"
        net_id: "{{ test_net_id }}"
        stack_id: "{{ stack_id }}"
        default_gateway: "192.168.3.1"
        name: "Test L3 interface 2"
        subnet: "192.168.3.0/24"
        interface_ip: "192.168.3.2"
        multicast_routing: disabled
        vlan_id: 11
      delegate_to: localhost
      register: create

    - name: Assert create
      ansible.builtin.assert:
        that:
          - create.data is defined
          - create is changed

    - name: Query all l3 interfaces
      cisco.meraki.meraki_ms_stack_l3_interface:
        auth_key: "{{ auth_key }}"
        org_name: "{{ test_org_name }}"
        net_id: "{{ test_net_id }}"
        state: query
        stack_id: "{{ stack_id }}"
      delegate_to: localhost
      register: query_l3

    - name: Set interface_id_1
      ansible.builtin.set_fact:
        interface_id_1: "{{ create.data.interface_id }}"

    - name: Query one l3 interface
      cisco.meraki.meraki_ms_stack_l3_interface:
        auth_key: "{{ auth_key }}"
        org_name: "{{ test_org_name }}"
        net_id: "{{ test_net_id }}"
        state: query
        stack_id: "{{ stack_id }}"
        interface_id: "{{ interface_id_1 }}"
      delegate_to: localhost
      register: query_one

    - name: Debug query_one
      ansible.builtin.debug:
        var: query_one

    - name: Update l3 interface with check mode
      cisco.meraki.meraki_ms_stack_l3_interface:
        auth_key: "{{ auth_key }}"
        state: present
        org_name: "{{ test_org_name }}"
        net_id: "{{ test_net_id }}"
        stack_id: "{{ stack_id }}"
        name: "Test L3 interface 3"
        subnet: "192.168.3.0/24"
        interface_ip: "192.168.3.2"
        interface_id: "{{ interface_id_1 }}"
        multicast_routing: disabled
        vlan_id: 11
      delegate_to: localhost
      register: update_check
      check_mode: true

    - name: Assert update_check
      ansible.builtin.assert:
        that:
          - update_check.data is defined
          - update_check is changed

    - name: Update l3 interface
      cisco.meraki.meraki_ms_stack_l3_interface:
        auth_key: "{{ auth_key }}"
        state: present
        org_name: "{{ test_org_name }}"
        net_id: "{{ test_net_id }}"
        stack_id: "{{ stack_id }}"
        name: "Test L3 interface 3"
        subnet: "192.168.3.0/24"
        interface_ip: "192.168.3.2"
        interface_id: "{{ interface_id_1 }}"
        multicast_routing: disabled
        vlan_id: 11
      delegate_to: localhost
      register: update

    - name: Assert update
      ansible.builtin.assert:
        that:
          - update.data is defined
          - update is changed

    - name: Update l3 interface idempotent
      cisco.meraki.meraki_ms_stack_l3_interface:
        auth_key: "{{ auth_key }}"
        state: present
        org_name: "{{ test_org_name }}"
        net_id: "{{ test_net_id }}"
        stack_id: "{{ stack_id }}"
        name: "Test L3 interface 3"
        subnet: "192.168.3.0/24"
        interface_ip: "192.168.3.2"
        multicast_routing: disabled
        vlan_id: 11
      delegate_to: localhost
      register: update_idempotent

    - name: Assert update_idempotent
      ansible.builtin.assert:
        that: update_idempotent is not changed

    - name: Update l3 interface idempotent with check mode
      cisco.meraki.meraki_ms_stack_l3_interface:
        auth_key: "{{ auth_key }}"
        state: present
        org_name: "{{ test_org_name }}"
        net_id: "{{ test_net_id }}"
        stack_id: "{{ stack_id }}"
        name: "Test L3 interface 3"
        subnet: "192.168.3.0/24"
        interface_ip: "192.168.3.2"
        multicast_routing: disabled
        vlan_id: 11
      delegate_to: localhost
      register: update_idempotent_check
      check_mode: true

    - name: Assert update_idempotent_check
      ansible.builtin.assert:
        that: update_idempotent_check is not changed

    - name: Query all l3 interfaces
      cisco.meraki.meraki_ms_stack_l3_interface:
        auth_key: "{{ auth_key }}"
        org_name: "{{ test_org_name }}"
        net_id: "{{ test_net_id }}"
        state: query
        stack_id: "{{ stack_id }}"
      delegate_to: localhost
      register: query_l3

    - name: Debug query_l3
      ansible.builtin.debug:
        var: query_l3

    - name: Set fact query_l3
      ansible.builtin.set_fact:
        interface_id_1: "{{ query_l3.data[0].interface_id }}"
      failed_when: false
      changed_when: false

    - name: Assert query_l3
      ansible.builtin.assert:
        that:
          - query_l3.data is defined
          - query_l3.data | length > 0

    - name: Query one l3 interface
      cisco.meraki.meraki_ms_stack_l3_interface:
        auth_key: "{{ auth_key }}"
        state: query
        org_name: "{{ test_org_name }}"
        net_id: "{{ test_net_id }}"
        stack_id: "{{ stack_id }}"
        name: Test L3 interface
      delegate_to: localhost
      register: query_one

    - name: Assert query_one
      ansible.builtin.assert:
        that:
          - query_one.data is defined

  #############################################################################
  # Tear down starts here
  #############################################################################

  always:
    - name: Delete l3 interface with check mode
      cisco.meraki.meraki_ms_stack_l3_interface:
        auth_key: "{{ auth_key }}"
        state: absent
        org_name: "{{ test_org_name }}"
        net_id: "{{ test_net_id }}"
        stack_id: "{{ stack_id }}"
        interface_id: "{{ item }}"
      delegate_to: localhost
      check_mode: true
      register: delete_check
      loop:
        - "{{ interface_id_1 }}"

    - name: Assert delete_check
      ansible.builtin.assert:
        that:
          - delete_check is changed

    - name: Delete l3 interface
      cisco.meraki.meraki_ms_stack_l3_interface:
        auth_key: "{{ auth_key }}"
        state: absent
        org_name: "{{ test_org_name }}"
        net_id: "{{ test_net_id }}"
        stack_id: "{{ stack_id }}"
        interface_id: "{{ interface_id_1 }}"
      delegate_to: localhost
      register: delete

    - name: Assert delete
      ansible.builtin.assert:
        that:
          - delete is changed

    - name: Remove switches from stack
      cisco.meraki.meraki_ms_stack:
        auth_key: "{{ auth_key }}"
        state: absent
        org_name: "{{ test_org_name }}"
        net_id: "{{ test_net_id }}"
        name: Test stack
      register: stack

    # - name: Delete network
    #   meraki_network:
    #     auth_key: '{{ auth_key }}'
    #     state: absent
    #     org_name: '{{ test_org_name }}'
    #     net_name: IntTestNetworkSwitch
    #   delegate_to: localhost
