# Test code for the Meraki Organization module
# Copyright: (c) 2018, Kevin Breit (@kbreit)

# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Test an API key is provided
  ansible.builtin.fail:
    msg: Please define an API key
  when: auth_key is not defined

- name: Query all switchports
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: query
    serial: '{{ serial_switch }}'
  delegate_to: localhost
  register: query_all

- name: Debug query_all
  ansible.builtin.debug:
    msg: '{{ query_all }}'

- name: Query one switchport
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: query
    serial: '{{ serial_switch }}'
    number: 1
  delegate_to: localhost
  register: query_one

- name: Debug query_all
  ansible.builtin.debug:
    msg: '{{ query_one }}'

- name: Enable switchport with check mode
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    name: Temporary
  delegate_to: localhost
  check_mode: true
  register: update_port_true_check

- name: Debug update_port_true_check
  ansible.builtin.debug:
    msg: '{{ update_port_true_check }}'

- name: Assert update_port_true_check
  ansible.builtin.assert:
    that:
      - update_port_true_check is changed
      - update_port_true_check.data is defined

- name: Enable switchport
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
  delegate_to: localhost
  register: update_port_true

- name: Debug update_port_true
  ansible.builtin.debug:
    msg: '{{ update_port_true }}'

- name: Assert update_port_true
  ansible.builtin.assert:
    that:
      - update_port_true.data.enabled == True

- name: Disable switchport
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: false
  delegate_to: localhost
  register: update_port_false

- name: Debug update_port_false
  ansible.builtin.debug:
    msg: '{{ update_port_false }}'

- name: Assert update_port_false
  ansible.builtin.assert:
    that:
      - update_port_false.data.enabled == False

- name: Name switchport
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    name: Test Port
  delegate_to: localhost
  register: update_port_name

- name: Debug update_port_name
  ansible.builtin.debug:
    msg: '{{ update_port_name }}'

- name: Assert update_port_name
  ansible.builtin.assert:
    that:
      - update_port_name.data.name == 'Test Port'

- name: Configure access port with check mode
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    name: Test Port
    tags: desktop
    type: access
    vlan: 10
  delegate_to: localhost
  check_mode: true
  register: update_access_port_changed

- name: Debug update_access_port_changed
  ansible.builtin.debug:
    msg: '{{ update_access_port_changed }}'

- name: Assert update_access_port_changed
  ansible.builtin.assert:
    that:
      - update_access_port_changed is changed
      - update_access_port_changed.data is defined

- name: Configure access port
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    name: Test Port
    tags: desktop
    type: access
    vlan: 10
  delegate_to: localhost
  register: update_access_port

- name: Debug update_access_port
  ansible.builtin.debug:
    msg: '{{ update_access_port }}'

- name: Assert update_access_port
  ansible.builtin.assert:
    that:
      - update_access_port.data.vlan == 10

- name: Configure flexible stacking
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch_l3 }}'
    number: 7
    enabled: true
    flexible_stacking_enabled: true
  delegate_to: localhost
  register: flex_stacking_enabled

- name: Debug flex_stacking_enabled
  ansible.builtin.debug:
    msg: '{{ flex_stacking_enabled }}'

- name: Assert flex_stacking_enabled
  ansible.builtin.assert:
    that:
      - flex_stacking_enabled.data.flexible_stacking_enabled == true

# - name: Configure adaptive policy and SGT
#   cisco.meraki.meraki_ms_switchport:
#     auth_key: '{{ auth_key }}'
#     state: present
#     serial: '{{ serial_switch_l3 }}'
#     number: 7
#     enabled: true
#     adaptive_policy_group_id: "1234"
#     peer_sgt_capable: true
#   delegate_to: localhost
#   register: adaptive_policy

# - ansible.builtin.debug:
#     msg: '{{adaptive_policy}}'

# - ansible.builtin.assert:
#     that:
#       - adaptive_policy.data.adaptive_policy_group_id == "1234"
#       - adaptive_policy.data.peer_sgt_capable == true

- name: Configure port as trunk
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 8
    enabled: true
    name: Test Port
    type: trunk
    vlan: 10
    allowed_vlans: 10, 100, 200
  delegate_to: localhost

- name: Remove VLAN on switchport
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 8
    enabled: true
    type: trunk
    vlan: 0
  delegate_to: localhost
  register: remove_vlan

- name: Debug remove_vlan
  ansible.builtin.debug:
    msg: '{{ remove_vlan }}'

- name: Assert remove_vlan
  ansible.builtin.assert:
    that:
      - remove_vlan.data.vlan == None

- name: Convert trunk port to access
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 8
    enabled: true
    name: Test Port
    type: access
    vlan: 10
  delegate_to: localhost

- name: Test converted port for idempotency
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 8
    enabled: true
    name: Test Port
    type: access
    vlan: 10
  delegate_to: localhost
  register: convert_idempotent

- name: Assert convert_idempotent
  ansible.builtin.assert:
    that:
      - convert_idempotent.changed == False

- name: Change voice VLAN for next task
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    name: Test Port
    tags: desktop
    type: access
    vlan: 10
    voice_vlan: 12
  delegate_to: localhost
  register: update_port_vvlan

- name: Configure access port with voice VLAN
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    name: Test Port
    tags: desktop
    type: access
    vlan: 10
    voice_vlan: 11
  delegate_to: localhost
  register: update_port_vvlan

- name: Debug update_port_vvlan
  ansible.builtin.debug:
    msg: '{{ update_port_vvlan }}'

- name: Assert update_port_vvlan
  ansible.builtin.assert:
    that:
      - update_port_vvlan.data.voice_vlan == 11
      - update_port_vvlan.changed == True

- name: Check access port for idempotenty
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    name: Test Port
    tags: desktop
    type: access
    vlan: 10
    voice_vlan: 11
  delegate_to: localhost
  register: update_port_access_idempotent

- name: Debug update_port_access_idempotent
  ansible.builtin.debug:
    msg: '{{ update_port_access_idempotent }}'

- name: Assert update_port_access_idempotent
  ansible.builtin.assert:
    that:
      - update_port_access_idempotent.changed == False
      - update_port_access_idempotent.data is defined

- name: Configure access port removing voice VLAN
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    name: Test Port
    tags: desktop
    type: access
    vlan: 10
    voice_vlan_state: absent
  delegate_to: localhost
  register: update_port_remove_vvlan

- name: Debut update_port_remove_vvlan
  ansible.builtin.debug:
    msg: '{{ update_port_remove_vvlan }}'

- name: Assert
  ansible.builtin.assert:
    that:
      - update_port_remove_vvlan.data.voice_vlan == None
      - update_port_remove_vvlan.changed == True

- name: Configure trunk port
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    name: Server port
    tags: server
    type: trunk
    allowed_vlans: all
    vlan: 8
  delegate_to: localhost
  register: update_trunk

- name: Debug update_trunk
  ansible.builtin.debug:
    msg: '{{ update_trunk }}'

- name: Assert update_trunk
  ansible.builtin.assert:
    that:
      - update_trunk.data.tags.0 == 'server'
      - update_trunk.data.type == 'trunk'
      - update_trunk.data.allowed_vlans == 'all'

- name: Configure trunk port with specific VLANs
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    name: Server port
    tags: server
    type: trunk
    vlan: 8
    allowed_vlans:
      - 10
      - 15
      - 20
  delegate_to: localhost
  register: update_trunk

- name: Debug update_trunk
  ansible.builtin.debug:
    msg: '{{ update_trunk }}'

- name: Assert update_trunk
  ansible.builtin.assert:
    that:
      - update_trunk.data.tags.0 == 'server'
      - update_trunk.data.type == 'trunk'
      - update_trunk.data.allowed_vlans == '8,10,15,20'

- name: Configure trunk port with specific VLANs and native VLAN
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    name: Server port
    tags: server
    type: trunk
    vlan: 2
    allowed_vlans:
      - 10
      - 15
      - 20
  delegate_to: localhost
  register: update_trunk

- name: Debug update_trunk
  ansible.builtin.debug:
    msg: '{{ update_trunk }}'

- name: Assert update_trunk
  ansible.builtin.assert:
    that:
      - update_trunk.data.tags.0 == 'server'
      - update_trunk.data.type == 'trunk'
      - update_trunk.data.allowed_vlans == '2,10,15,20'

- name: Check for idempotency on trunk port
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    name: Server port
    tags: server
    type: trunk
    vlan: 2
    allowed_vlans:
      - 10
      - 15
      - 20
  delegate_to: localhost
  register: update_trunk_idempotent

- name: Debug update_trunk_idempotent
  ansible.builtin.debug:
    msg: '{{ update_trunk_idempotent }}'

- name: Assert update_trunk_idempotent
  ansible.builtin.assert:
    that:
      - update_trunk_idempotent.changed == False
      - update_trunk_idempotent.data is defined

# - name: Enable Sticky MAC Using Replace
#   cisco.meraki.meraki_ms_switchport:
#     auth_key: '{{ auth_key }}'
#     state: present
#     serial: '{{ serial_switch }}'
#     number: 7
#     enabled: true
#     type: access
#     access_policy_type: "Sticky MAC allow list"
#     sticky_mac_allow_list:
#       macs:
#         - "aa:aa:bb:bb:cc:cc"
#       state: replaced
#     sticky_mac_allow_list_limit: 1
#   delegate_to: localhost
#   register: sticky_mac_allow_replace

# - name: Debug sticky_mac_allow_replace
#   ansible.builtin.debug:
#     msg: '{{ sticky_mac_allow_replace }}'

# - name: Assert sticky_mac_allow_replace
#   ansible.builtin.assert:
#     that:
#       - sticky_mac_allow_replace.data.sticky_mac_allow_list_limit == 1
#       - sticky_mac_allow_replace.data.sticky_mac_allow_list == ["aa:aa:bb:bb:cc:cc"]

- name: Enable Sticky MAC Using Replace Idempotent
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    type: access
    access_policy_type: "Sticky MAC allow list"
    sticky_mac_allow_list:
      macs:
        - "aa:aa:bb:bb:cc:cc"
      state: replaced
    sticky_mac_allow_list_limit: 1
  delegate_to: localhost
  register: idempotent_sticky_mac_allow_replace

- name: Debug idempotent_sticky_mac_allow_replace
  ansible.builtin.debug:
    msg: '{{ idempotent_sticky_mac_allow_replace }}'

- name: Assert idempotent_mac_allow_replace
  ansible.builtin.assert:
    that:
      - idempotent_sticky_mac_allow_replace.changed == False
      - idempotent_sticky_mac_allow_replace.data is defined

- name: Enable Sticky MAC Using Merge
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    type: access
    access_policy_type: "Sticky MAC allow list"
    sticky_mac_allow_list:
      macs:
        - "11:aa:bb:bb:cc:cc"
      state: merged
    sticky_mac_allow_list_limit: 2
  delegate_to: localhost
  register: sticky_mac_allow_merge

- name: Debug sticky_mac_allow_merge
  ansible.builtin.debug:
    msg: '{{ sticky_mac_allow_merge }}'

- name: Assert sticky_mac_allow_merge
  ansible.builtin.assert:
    that:
      - sticky_mac_allow_merge.data.sticky_mac_allow_list_limit == 2
      - sticky_mac_allow_merge.data.sticky_mac_allow_list == ["aa:aa:bb:bb:cc:cc", "11:aa:bb:bb:cc:cc"]

- name: Enable Sticky MAC Using Merge Idempotent
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    type: access
    access_policy_type: "Sticky MAC allow list"
    sticky_mac_allow_list:
      macs:
        - "11:aa:bb:bb:cc:cc"
      state: merged
    sticky_mac_allow_list_limit: 2
  delegate_to: localhost
  register: idempotent_sticky_mac_allow_merge

- name: Debug idempotent_sticky_mac_allow_merge
  ansible.builtin.debug:
    msg: '{{ idempotent_sticky_mac_allow_merge }}'

- name: Assert idempotent_sticky_mac_allow_merge
  ansible.builtin.assert:
    that:
      - idempotent_sticky_mac_allow_merge.changed == False
      - idempotent_sticky_mac_allow_merge.data is defined

- name: Delete Sticky MAC From Allow List
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    type: access
    access_policy_type: "Sticky MAC allow list"
    sticky_mac_allow_list:
      macs:
        - "11:aa:bb:bb:cc:cc"
      state: deleted
    sticky_mac_allow_list_limit: 2
  delegate_to: localhost
  register: delete_sticky_mac

- name: Debug delete_sticky_mac
  ansible.builtin.debug:
    msg: '{{ delete_sticky_mac }}'

- name: Assert delete_sticky_mac
  ansible.builtin.assert:
    that:
      - delete_sticky_mac.data.sticky_mac_allow_list_limit == 2
      - delete_sticky_mac.data.sticky_mac_allow_list == ["aa:aa:bb:bb:cc:cc"]

- name: Delete Sticky MAC Idempotent
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    type: access
    access_policy_type: "Sticky MAC allow list"
    sticky_mac_allow_list:
      macs:
        - "11:aa:bb:bb:cc:cc"
      state: deleted
    sticky_mac_allow_list_limit: 2
  delegate_to: localhost
  register: idempotent_delete_sticky_mac

- name: Debug idempotent_delete_sticky_mac
  ansible.builtin.debug:
    msg: '{{ idempotent_delete_sticky_mac }}'

- name: Assert idempotent_delete_sticky_mac
  ansible.builtin.assert:
    that:
      - idempotent_delete_sticky_mac.changed == False
      - idempotent_delete_sticky_mac.data is defined

- name: Enable MAC Allow Using Replace
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    type: access
    access_policy_type: "MAC allow list"
    mac_allow_list:
      macs:
        - "aa:aa:bb:bb:cc:cc"
      state: replaced
  delegate_to: localhost
  register: mac_allow_replace

- name: Debug mac_allow_replace
  ansible.builtin.debug:
    msg: '{{ mac_allow_replace }}'

- name: Assert mac_allow_replace
  ansible.builtin.assert:
    that:
      - mac_allow_replace.data.mac_allow_list == ["aa:aa:bb:bb:cc:cc"]

- name: Enable MAC Allow Using Replace Idempotent
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    type: access
    access_policy_type: "MAC allow list"
    mac_allow_list:
      macs:
        - "aa:aa:bb:bb:cc:cc"
      state: replaced
  delegate_to: localhost
  register: idempotent_mac_allow_replace

- name: Debug idempotent_mac_allow_replace
  ansible.builtin.debug:
    msg: '{{ idempotent_mac_allow_replace }}'

- name: Assert idempotent_mac_allow_replace
  ansible.builtin.assert:
    that:
      - idempotent_mac_allow_replace.changed == False
      - idempotent_mac_allow_replace.data is defined

- name: Enable MAC Allow Using Merge
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    type: access
    access_policy_type: "MAC allow list"
    mac_allow_list:
      macs:
        - "11:aa:bb:bb:cc:cc"
      state: merged
  delegate_to: localhost
  register: mac_allow_merge

- name: Debug mac_allow_merge
  ansible.builtin.debug:
    msg: '{{ mac_allow_merge }}'

- name: Assert mac_allow_merge
  ansible.builtin.assert:
    that:
      - mac_allow_merge.data.mac_allow_list == ["aa:aa:bb:bb:cc:cc", "11:aa:bb:bb:cc:cc"]

- name: Enable MAC Allow Using Merge Idempotent
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    type: access
    access_policy_type: "MAC allow list"
    mac_allow_list:
      macs:
        - "11:aa:bb:bb:cc:cc"
      state: merged
  delegate_to: localhost
  register: idempotent_mac_allow_merge

- name: Debug idempotent_mac_allow_merge
  ansible.builtin.debug:
    msg: '{{ idempotent_mac_allow_merge }}'

- name: Assert idempotent_mac_allow_merge
  ansible.builtin.assert:
    that:
      - idempotent_mac_allow_merge.changed == False
      - idempotent_mac_allow_merge.data is defined

- name: Delete MAC From Allow List
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    type: access
    access_policy_type: "MAC allow list"
    mac_allow_list:
      macs:
        - "11:aa:bb:bb:cc:cc"
      state: deleted
  delegate_to: localhost
  register: delete_mac

- name: Debug delete_mac
  ansible.builtin.debug:
    msg: '{{ delete_mac }}'

- name: Assert delete_mac
  ansible.builtin.assert:
    that:
      - delete_mac.data.mac_allow_list == ["aa:aa:bb:bb:cc:cc"]

- name: Delete MAC Idempotent
  cisco.meraki.meraki_ms_switchport:
    auth_key: '{{ auth_key }}'
    state: present
    serial: '{{ serial_switch }}'
    number: 7
    enabled: true
    type: access
    access_policy_type: "MAC allow list"
    mac_allow_list:
      macs:
        - "11:aa:bb:bb:cc:cc"
      state: deleted
  delegate_to: localhost
  register: idempotent_delete_mac

- name: Debug idempotent_delete_mac
  ansible.builtin.debug:
    msg: '{{ idempotent_delete_mac }}'

- name: Assert idempotent_delete_mac
  ansible.builtin.assert:
    that:
      - idempotent_delete_mac.changed == False
      - idempotent_delete_mac.data is defined

- name: Change the switchport to 1 GB to auto
  cisco.meraki.meraki_ms_switchport:
    auth_key: "{{ auth_key }}"
    link_negotiation: "Auto negotiate"
    number: 9
    serial: "{{ serial_switch }}"
    state: present
  register: forced_change_port

- name: Change the switchport to 1 GB forced
  cisco.meraki.meraki_ms_switchport:
    auth_key: "{{ auth_key }}"
    link_negotiation: "1 Gigabit full duplex (forced)"
    number: 9
    serial: "{{ serial_switch }}"
    state: present
  register: forced_change_port

- name: Debug forced_change_port
  ansible.builtin.debug:
    msg: "{{ forced_change_port }}"

- name: Assert the port forced port
  ansible.builtin.assert:
    that:
      - forced_change_port.changed == True
      - forced_change_port.data.link_negotiation == "1 Gigabit full duplex (forced)"

- name: Change the switchport to 1 GB auto
  cisco.meraki.meraki_ms_switchport:
    auth_key: "{{ auth_key }}"
    link_negotiation: "1 Gigabit full duplex (auto)"
    number: 9
    serial: "{{ serial_switch }}"
    state: present
  register: auto_change_port

- name: Debug auto_change_port
  ansible.builtin.debug:
    msg: "{{ auto_change_port }}"

- name: Assert the port auto port
  ansible.builtin.assert:
    that:
      - auto_change_port.changed == True
      - auto_change_port.data.link_negotiation == "1 Gigabit full duplex (auto)"
